version: '2.2'
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.0.0
    container_name: elasticsearch
    environment:
      - node.name=elasticsearch
#      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=elasticsearch
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=false
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet
  kibana:
    image: docker.elastic.co/kibana/kibana:7.0.0
    container_name: kibana
    restart: on-failure
    links:
      - elasticsearch
    networks:
      - esnet
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
  filebeat:
    image: docker.elastic.co/beats/filebeat:7.0.0
    container_name: filebeat
    restart: on-failure
    links:
      - elasticsearch
      - kibana
    networks:
      - esnet
    depends_on:
      - kibana
      - elasticsearch
    volumes:
      - $PWD/config/filebeat/filebeat.yml:/filebeat.yml:rw
      - /opt/upload:/data/logs
      - /vol/filebeat/registry:/etc/registry
    command: filebeat -e -c /filebeat.yml
#  logstash:
#    image: docker.elastic.co/logstash/logstash:7.0.0
#    hostname: logstash
#    container_name: logstash
#    restart: always
#    volumes:
#      - /opt/logstash/conf:/opt/logstash/conf
#    command: logstash -f /opt/logstash/conf/

#  nginx:
#    image: nginx
#    hostname: nginx
#    container_name: nginx
#    restart: always
##    logging:
##      driver: syslog
##      options:
##        syslog-address: 'tcp://logstash:5000'
#    ports:
#      - 80:80
#    volumes:
#      - /opt/upload/nginx/conf/vhost:/etc/nginx/vhost
#      - /opt/upload/nginx/logs:/opt/nginx/logs
volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local

networks:
  esnet: